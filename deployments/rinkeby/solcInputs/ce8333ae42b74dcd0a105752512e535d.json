{
  "language": "Solidity",
  "sources": {
    "contracts/veryBadToken.sol": {
      "content": "pragma solidity ^0.8.7;\n\ncontract MyToken {\n\n    string public name = \"Very Bad Token\";\n    string public symbol = \"VBT\";\n    uint8 public decimals = 2;\n    mapping (address => uint256) public balances;\n    uint256 public totalSupply;\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    \n    function balanceOf(address owner) public view returns (uint256) {\n    \treturn balances[owner];\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n    \tbalances[msg.sender] -= value;\n    \tbalances[to] += value;\n    \temit Transfer(msg.sender, to, value); \n    }\n    \n    function _mint(address account, uint256 value) public {\n    \ttotalSupply += value;\n    \tbalances[account] += value;\n    \temit Transfer(address(0), account, value);\n    }\n\n}\n\n// Function transfer SHOULD throw if the message callerâ€™s account balance does not have enough tokens to spend.(EIP-20 token standart)\n// Function mint shouldn't be public(?)\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}